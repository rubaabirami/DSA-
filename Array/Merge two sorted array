// Time complexity = O(m + n)
// Space complexity = O(1)

#include <iostream>
using namespace std;

void merge(int num1[], int num2[], int m, int n) {
    int p1 = m - 1;
    int p2 = n - 1;
    int i = m + n - 1;

    // Merge in reverse order
    while (p2 >= 0) {
        if (p1 >= 0 && num1[p1] > num2[p2]) {
            num1[i--] = num1[p1--];
        } else {
            num1[i--] = num2[p2--];
        }
    }
}

int main() {
    int num1[10] = {1, 3, 5, 7};  // assume capacity of 10
    int num2[] = {2, 4, 6};
    int m = 4, n = 3;

    merge(num1, num2, m, n);

    cout << "Merged array: ";
    for (int i = 0; i < m + n; i++) {
        cout << num1[i] << " ";
    }

    return 0;
}
